/*
Copyright 2024 The PRO-Robotech Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	netguardv1beta1 "netguard-pg-backend/internal/k8s/apis/netguard/v1beta1"

	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// NetworkLister helps list Networks.
// All objects returned here must be treated as read-only.
type NetworkLister interface {
	// List lists all Networks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*netguardv1beta1.Network, err error)
	// Networks returns an object that can list and get Networks.
	Networks(namespace string) NetworkNamespaceLister
	NetworkListerExpansion
}

// networkLister implements the NetworkLister interface.
type networkLister struct {
	listers.ResourceIndexer[*netguardv1beta1.Network]
}

// NewNetworkLister returns a new NetworkLister.
func NewNetworkLister(indexer cache.Indexer) NetworkLister {
	return &networkLister{listers.New[*netguardv1beta1.Network](indexer, netguardv1beta1.Resource("network"))}
}

// Networks returns an object that can list and get Networks.
func (s *networkLister) Networks(namespace string) NetworkNamespaceLister {
	return networkNamespaceLister{listers.NewNamespaced[*netguardv1beta1.Network](s.ResourceIndexer, namespace)}
}

// NetworkNamespaceLister helps list and get Networks.
// All objects returned here must be treated as read-only.
type NetworkNamespaceLister interface {
	// List lists all Networks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*netguardv1beta1.Network, err error)
	// Get retrieves the Network from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*netguardv1beta1.Network, error)
	NetworkNamespaceListerExpansion
}

// networkNamespaceLister implements the NetworkNamespaceLister
// interface.
type networkNamespaceLister struct {
	listers.ResourceIndexer[*netguardv1beta1.Network]
}
