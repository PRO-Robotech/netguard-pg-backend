/*
Copyright 2024 The PRO-Robotech Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	netguardv1beta1 "netguard-pg-backend/internal/k8s/apis/netguard/v1beta1"

	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// RuleS2SLister helps list RuleS2Ss.
// All objects returned here must be treated as read-only.
type RuleS2SLister interface {
	// List lists all RuleS2Ss in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*netguardv1beta1.RuleS2S, err error)
	// RuleS2Ss returns an object that can list and get RuleS2Ss.
	RuleS2Ss(namespace string) RuleS2SNamespaceLister
	RuleS2SListerExpansion
}

// ruleS2SLister implements the RuleS2SLister interface.
type ruleS2SLister struct {
	listers.ResourceIndexer[*netguardv1beta1.RuleS2S]
}

// NewRuleS2SLister returns a new RuleS2SLister.
func NewRuleS2SLister(indexer cache.Indexer) RuleS2SLister {
	return &ruleS2SLister{listers.New[*netguardv1beta1.RuleS2S](indexer, netguardv1beta1.Resource("rules2s"))}
}

// RuleS2Ss returns an object that can list and get RuleS2Ss.
func (s *ruleS2SLister) RuleS2Ss(namespace string) RuleS2SNamespaceLister {
	return ruleS2SNamespaceLister{listers.NewNamespaced[*netguardv1beta1.RuleS2S](s.ResourceIndexer, namespace)}
}

// RuleS2SNamespaceLister helps list and get RuleS2Ss.
// All objects returned here must be treated as read-only.
type RuleS2SNamespaceLister interface {
	// List lists all RuleS2Ss in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*netguardv1beta1.RuleS2S, err error)
	// Get retrieves the RuleS2S from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*netguardv1beta1.RuleS2S, error)
	RuleS2SNamespaceListerExpansion
}

// ruleS2SNamespaceLister implements the RuleS2SNamespaceLister
// interface.
type ruleS2SNamespaceLister struct {
	listers.ResourceIndexer[*netguardv1beta1.RuleS2S]
}
