{
  "swagger": "2.0",
  "info": {
    "title": "Netguard API",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "NetguardService",
      "description": "Netguard API service"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/address-group-bindings": {
      "get": {
        "summary": "ListAddressGroupBindings - gets list of address group bindings",
        "description": "ListAddressGroupBindings: gets list of address group bindings",
        "operationId": "NetguardService_ListAddressGroupBindings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAddressGroupBindingsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/address-group-bindings/{identifier.namespace}/{identifier.name}": {
      "get": {
        "summary": "GetAddressGroupBinding - gets a specific address group binding by ID",
        "description": "GetAddressGroupBinding: gets a specific address group binding by ID",
        "operationId": "NetguardService_GetAddressGroupBinding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAddressGroupBindingResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identifier.namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier.name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/address-group-port-mappings": {
      "get": {
        "summary": "ListAddressGroupPortMappings - gets list of address group port mappings",
        "description": "ListAddressGroupPortMappings: gets list of address group port mappings",
        "operationId": "NetguardService_ListAddressGroupPortMappings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAddressGroupPortMappingsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/address-group-port-mappings/{identifier.namespace}/{identifier.name}": {
      "get": {
        "summary": "GetAddressGroupPortMapping - gets a specific address group port mapping by ID",
        "description": "GetAddressGroupPortMapping: gets a specific address group port mapping by ID",
        "operationId": "NetguardService_GetAddressGroupPortMapping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAddressGroupPortMappingResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identifier.namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier.name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/address-groups": {
      "get": {
        "summary": "ListAddressGroups - gets list of address groups",
        "description": "ListAddressGroups: gets list of address groups",
        "operationId": "NetguardService_ListAddressGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAddressGroupsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/address-groups/{identifier.namespace}/{identifier.name}": {
      "get": {
        "summary": "GetAddressGroup - gets a specific address group by ID",
        "description": "GetAddressGroup: gets a specific address group by ID",
        "operationId": "NetguardService_GetAddressGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAddressGroupResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identifier.namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier.name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/rule-s2s": {
      "get": {
        "summary": "ListRuleS2S - gets list of rule s2s",
        "description": "ListRuleS2S: gets list of rule s2s",
        "operationId": "NetguardService_ListRuleS2S",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRuleS2SResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/rule-s2s/{identifier.namespace}/{identifier.name}": {
      "get": {
        "summary": "GetRuleS2S - gets a specific rule s2s by ID",
        "description": "GetRuleS2S: gets a specific rule s2s by ID",
        "operationId": "NetguardService_GetRuleS2S",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRuleS2SResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identifier.namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier.name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/service-aliases": {
      "get": {
        "summary": "ListServiceAliases - gets list of service aliases",
        "description": "ListServiceAliases: gets list of service aliases",
        "operationId": "NetguardService_ListServiceAliases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListServiceAliasesResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/service-aliases/{identifier.namespace}/{identifier.name}": {
      "get": {
        "summary": "GetServiceAlias - gets a specific service alias by ID",
        "description": "GetServiceAlias: gets a specific service alias by ID",
        "operationId": "NetguardService_GetServiceAlias",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetServiceAliasResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identifier.namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier.name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/services": {
      "get": {
        "summary": "ListServices - gets list of services",
        "description": "ListServices: gets list of services",
        "operationId": "NetguardService_ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListServicesResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/services/{identifier.namespace}/{identifier.name}": {
      "get": {
        "summary": "GetService - gets a specific service by ID",
        "description": "GetService: gets a specific service by ID",
        "operationId": "NetguardService_GetService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetServiceResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identifier.namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier.name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/sync": {
      "post": {
        "summary": "Sync - syncs data in DB",
        "description": "Sync: makes changes in DB",
        "operationId": "NetguardService_Sync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SyncReq"
            }
          }
        ],
        "tags": [
          "NetguardService"
        ]
      }
    },
    "/v1/sync/status": {
      "get": {
        "summary": "SyncStatus - gets last succeeded update DB status",
        "description": "SyncStatus: gets last succeeded update DB status",
        "operationId": "NetguardService_SyncStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SyncStatusResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NetguardService"
        ]
      }
    }
  },
  "definitions": {
    "NetIPTransport": {
      "type": "string",
      "enum": [
        "TCP",
        "UDP"
      ],
      "default": "TCP",
      "title": "Transport: represents net transport (L4)"
    },
    "commonTraffic": {
      "type": "string",
      "enum": [
        "Undef",
        "Ingress",
        "Egress"
      ],
      "default": "Undef",
      "description": "- Undef: undefined tfaffic direction\n - Ingress: Ingress\n - Egress: Egress",
      "title": "Ingress / Egress traffic dir"
    },
    "netguardv1PortRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PortRange - range of ports"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddressGroup": {
      "type": "object",
      "properties": {
        "selfRef": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        },
        "description": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServiceRef"
          }
        }
      },
      "title": "AddressGroup - represents a group of addresses",
      "required": [
        "selfRef"
      ]
    },
    "v1AddressGroupBinding": {
      "type": "object",
      "properties": {
        "selfRef": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        },
        "serviceRef": {
          "$ref": "#/definitions/v1ServiceRef"
        },
        "addressGroupRef": {
          "$ref": "#/definitions/v1AddressGroupRef"
        }
      },
      "title": "AddressGroupBinding - binding between a service and an address group",
      "required": [
        "selfRef",
        "serviceRef",
        "addressGroupRef"
      ]
    },
    "v1AddressGroupPortMapping": {
      "type": "object",
      "properties": {
        "selfRef": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        },
        "accessPorts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServicePortsRef"
          }
        }
      },
      "title": "AddressGroupPortMapping - mapping between an address group and allowed ports",
      "required": [
        "selfRef"
      ]
    },
    "v1AddressGroupRef": {
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        }
      },
      "title": "AddressGroupRef - reference to an address group"
    },
    "v1GetAddressGroupBindingResp": {
      "type": "object",
      "properties": {
        "addressGroupBinding": {
          "$ref": "#/definitions/v1AddressGroupBinding"
        }
      },
      "title": "GetAddressGroupBindingResp - response with a specific address group binding"
    },
    "v1GetAddressGroupPortMappingResp": {
      "type": "object",
      "properties": {
        "addressGroupPortMapping": {
          "$ref": "#/definitions/v1AddressGroupPortMapping"
        }
      },
      "title": "GetAddressGroupPortMappingResp - response with a specific address group port mapping"
    },
    "v1GetAddressGroupResp": {
      "type": "object",
      "properties": {
        "addressGroup": {
          "$ref": "#/definitions/v1AddressGroup"
        }
      },
      "title": "GetAddressGroupResp - response with a specific address group"
    },
    "v1GetRuleS2SResp": {
      "type": "object",
      "properties": {
        "ruleS2s": {
          "$ref": "#/definitions/v1RuleS2S"
        }
      },
      "title": "GetRuleS2SResp - response with a specific rule s2s"
    },
    "v1GetServiceAliasResp": {
      "type": "object",
      "properties": {
        "serviceAlias": {
          "$ref": "#/definitions/v1ServiceAlias"
        }
      },
      "title": "GetServiceAliasResp - response with a specific service alias"
    },
    "v1GetServiceResp": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/v1Service"
        }
      },
      "title": "GetServiceResp - response with a specific service"
    },
    "v1IngressPort": {
      "type": "object",
      "properties": {
        "protocol": {
          "$ref": "#/definitions/NetIPTransport"
        },
        "port": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "IngressPort - defines a port configuration for ingress traffic"
    },
    "v1ListAddressGroupBindingsResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddressGroupBinding"
          }
        }
      },
      "title": "ListAddressGroupBindingsResp - response with list of address group bindings"
    },
    "v1ListAddressGroupPortMappingsResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddressGroupPortMapping"
          }
        }
      },
      "title": "ListAddressGroupPortMappingsResp - response with list of address group port mappings"
    },
    "v1ListAddressGroupsResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddressGroup"
          }
        }
      },
      "title": "ListAddressGroupsResp - response with list of address groups"
    },
    "v1ListRuleS2SResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RuleS2S"
          }
        }
      },
      "title": "ListRuleS2SResp - response with list of rule s2s"
    },
    "v1ListServiceAliasesResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServiceAlias"
          }
        }
      },
      "title": "ListServiceAliasesResp - response with list of service aliases"
    },
    "v1ListServicesResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Service"
          }
        }
      },
      "title": "ListServicesResp - response with list of services"
    },
    "v1PortRanges": {
      "type": "object",
      "properties": {
        "ranges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/netguardv1PortRange"
          }
        }
      },
      "title": "PortRanges - list of port ranges"
    },
    "v1ProtocolPorts": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1PortRanges"
          }
        }
      },
      "title": "ProtocolPorts - mapping of protocols to port ranges"
    },
    "v1ResourceIdentifier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "title": "ResourceIdentifier - uniquely identifies a resource"
    },
    "v1RuleS2S": {
      "type": "object",
      "properties": {
        "selfRef": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        },
        "traffic": {
          "$ref": "#/definitions/commonTraffic"
        },
        "serviceLocalRef": {
          "$ref": "#/definitions/v1ServiceRef"
        },
        "serviceRef": {
          "$ref": "#/definitions/v1ServiceRef"
        }
      },
      "title": "RuleS2S - rule between two services",
      "required": [
        "name",
        "namespace",
        "traffic",
        "serviceLocalRef",
        "serviceRef"
      ]
    },
    "v1Service": {
      "type": "object",
      "properties": {
        "selfRef": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        },
        "description": {
          "type": "string"
        },
        "ingressPorts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1IngressPort"
          }
        },
        "addressGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddressGroupRef"
          }
        }
      },
      "title": "Service - represents a service with ports",
      "required": [
        "selfRef"
      ]
    },
    "v1ServiceAlias": {
      "type": "object",
      "properties": {
        "selfRef": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        },
        "serviceRef": {
          "$ref": "#/definitions/v1ServiceRef"
        }
      },
      "title": "ServiceAlias - alias for a service",
      "required": [
        "name",
        "namespace",
        "serviceRef"
      ]
    },
    "v1ServicePortsRef": {
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        },
        "ports": {
          "$ref": "#/definitions/v1ProtocolPorts"
        }
      },
      "title": "ServicePortsRef - reference to a service and its allowed ports"
    },
    "v1ServiceRef": {
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        }
      },
      "title": "ServiceRef - reference to a service"
    },
    "v1SyncReq": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Service"
          }
        },
        "addressGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddressGroup"
          }
        },
        "addressGroupBindings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddressGroupBinding"
          }
        },
        "addressGroupPortMappings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddressGroupPortMapping"
          }
        },
        "ruleS2s": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RuleS2S"
          }
        },
        "serviceAliases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServiceAlias"
          }
        }
      },
      "title": "SyncReq - request to sync"
    },
    "v1SyncStatusResp": {
      "type": "object",
      "properties": {
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "SyncStatusResp - sync status"
    }
  },
  "externalDocs": {
    "description": "Documentation",
    "url": "https://github.com/yourusername/netguard-pg-backend"
  }
}
