#!/bin/bash

# Script to fix namespace inconsistencies in netguard configuration
# –ü—Ä–∏–≤–æ–¥–∏—Ç –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫ –µ–¥–∏–Ω–æ–º—É namespace: netguard-system

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
CONFIG_DIR="$PROJECT_ROOT/config/k8s"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

echo "=== –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ namespace'–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Netguard ==="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -d "$CONFIG_DIR" ]; then
    log_error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $CONFIG_DIR"
    exit 1
fi

log_info "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $CONFIG_DIR"

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
BACKUP_DIR="$CONFIG_DIR.backup.$(date +%Y%m%d_%H%M%S)"
log_info "–°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤: $BACKUP_DIR"
cp -r "$CONFIG_DIR" "$BACKUP_DIR"
log_success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
FILES_TO_FIX=(
    "configmap.yaml"
    "backend-deployment.yaml"
    "deployment.yaml"
    "service.yaml"
    "apiservice.yaml"
)

log_info "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º namespace: default -> netguard-system"

for file in "${FILES_TO_FIX[@]}"; do
    FILE_PATH="$CONFIG_DIR/$file"
    if [ -f "$FILE_PATH" ]; then
        log_info "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: $file"
        
        # –ó–∞–º–µ–Ω—è–µ–º namespace: default –Ω–∞ namespace: netguard-system
        sed -i.bak 's/namespace: default/namespace: netguard-system/g' "$FILE_PATH"
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª .bak
        rm -f "$FILE_PATH.bak"
        
        log_success "‚úì $file –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        log_warning "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"
    fi
done

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º BACKEND_ENDPOINT –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ FQDN
log_info "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º BACKEND_ENDPOINT –¥–ª—è –º–µ–∂—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏"

DEPLOYMENT_FILE="$CONFIG_DIR/deployment.yaml"
if [ -f "$DEPLOYMENT_FILE" ]; then
    # –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–º—è —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ FQDN
    sed -i.bak 's|BACKEND_ENDPOINT.*netguard-backend:9090|BACKEND_ENDPOINT: "netguard-backend.netguard-system.svc.cluster.local:9090"|g' "$DEPLOYMENT_FILE"
    
    # –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω –±–µ–∑ –∫–∞–≤—ã—á–µ–∫
    sed -i.bak 's|value: netguard-backend:9090|value: "netguard-backend.netguard-system.svc.cluster.local:9090"|g' "$DEPLOYMENT_FILE"
    
    rm -f "$DEPLOYMENT_FILE.bak"
    log_success "‚úì BACKEND_ENDPOINT –æ–±–Ω–æ–≤–ª–µ–Ω —Å FQDN"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —Å–µ—Ä–≤–∏—Å—ã
log_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤"

SERVICE_FILE="$CONFIG_DIR/service.yaml"
DEPLOYMENT_SERVICE_COUNT=$(grep -c "kind: Service" "$CONFIG_DIR/deployment.yaml" 2>/dev/null || echo "0")

if [ -f "$SERVICE_FILE" ] && [ "$DEPLOYMENT_SERVICE_COUNT" -gt "0" ]; then
    log_warning "–ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è Service"
    log_info "–ü–µ—Ä–µ–º–µ—â–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π service.yaml –≤ –∞—Ä—Ö–∏–≤"
    mv "$SERVICE_FILE" "$SERVICE_FILE.duplicate_archived"
    log_success "‚úì –î—É–±–ª–∏—Ä—É—é—â–∏–π service.yaml –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –∞—Ä—Ö–∏–≤"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å kustomization.yaml
KUSTOMIZATION_FILE="$CONFIG_DIR/kustomization.yaml"
if [ -f "$KUSTOMIZATION_FILE" ]; then
    log_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º kustomization.yaml"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ namespace —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    if grep -q "namespace: netguard-system" "$KUSTOMIZATION_FILE"; then
        log_success "‚úì Namespace –≤ kustomization.yaml –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    else
        log_warning "Namespace –≤ kustomization.yaml –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    fi
    
    # –£–¥–∞–ª—è–µ–º service.yaml –∏–∑ —Ä–µ—Å—É—Ä—Å–æ–≤ –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω
    if [ -f "$SERVICE_FILE.duplicate_archived" ]; then
        sed -i.bak '/^- service\.yaml$/d' "$KUSTOMIZATION_FILE"
        rm -f "$KUSTOMIZATION_FILE.bak"
        log_success "‚úì service.yaml —É–¥–∞–ª–µ–Ω –∏–∑ kustomization.yaml"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
log_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π..."

echo -e "\nüìä –°–≤–æ–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:"
echo "===================="

for file in "${FILES_TO_FIX[@]}"; do
    FILE_PATH="$CONFIG_DIR/$file"
    if [ -f "$FILE_PATH" ]; then
        DEFAULT_COUNT=$(grep -c "namespace: default" "$FILE_PATH" 2>/dev/null || echo "0")
        NETGUARD_COUNT=$(grep -c "namespace: netguard-system" "$FILE_PATH" 2>/dev/null || echo "0")
        
        if [ "$DEFAULT_COUNT" -eq "0" ] && [ "$NETGUARD_COUNT" -gt "0" ]; then
            echo "‚úÖ $file - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω ($NETGUARD_COUNT namespace'–æ–≤ netguard-system)"
        elif [ "$DEFAULT_COUNT" -gt "0" ]; then
            echo "‚ö†Ô∏è  $file - –æ—Å—Ç–∞–ª–∏—Å—å default namespace'—ã ($DEFAULT_COUNT)"
        else
            echo "‚ÑπÔ∏è  $file - –±–µ–∑ namespace'–æ–≤"
        fi
    fi
done

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
TOTAL_DEFAULT=$(find "$CONFIG_DIR" -name "*.yaml" -exec grep -l "namespace: default" {} \; 2>/dev/null | wc -l)

if [ "$TOTAL_DEFAULT" -eq "0" ]; then
    log_success "üéâ –í—Å–µ namespace'—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!"
    echo -e "\nüìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: $BACKUP_DIR"
    echo -e "üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å: ./scripts/deploy-complete.sh"
else
    log_warning "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã —Å namespace: default ($TOTAL_DEFAULT —Ñ–∞–π–ª–æ–≤)"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é:"
    find "$CONFIG_DIR" -name "*.yaml" -exec grep -l "namespace: default" {} \; 2>/dev/null
fi

echo -e "\n=== –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ namespace'–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ===" 