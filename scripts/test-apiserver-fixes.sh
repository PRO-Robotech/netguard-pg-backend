#!/bin/bash

# –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π API —Å–µ—Ä–≤–µ—Ä–∞
# –ê–≤—Ç–æ—Ä: AI Assistant  
# –î–∞—Ç–∞: $(date)

set -euo pipefail

echo "üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô API –°–ï–†–í–ï–†–ê"
echo "========================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
cd "$PROJECT_ROOT"

echo -e "${BLUE}üìç –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $PROJECT_ROOT${NC}"

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª —Å–æ–±—Ä–∞–Ω
echo -e "\n${YELLOW}1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±–æ—Ä–∫—É...${NC}"
if [[ -f "bin/k8s-apiserver" ]]; then
    echo -e "${GREEN}‚úÖ –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª bin/k8s-apiserver –Ω–∞–π–¥–µ–Ω${NC}"
    ls -la bin/k8s-apiserver
else
    echo -e "${RED}‚ùå –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–±–∏—Ä–∞–µ–º...${NC}"
    go build -o bin/k8s-apiserver cmd/k8s-apiserver/main.go
    echo -e "${GREEN}‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
fi

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è —Å --help
echo -e "\n${YELLOW}2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å...${NC}"
echo "–ó–∞–ø—É—Å–∫–∞–µ–º: ./bin/k8s-apiserver --help"
if timeout 10s ./bin/k8s-apiserver --help >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
else
    echo -e "${RED}‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é${NC}"
    exit 1
fi

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Kubernetes
echo -e "\n${YELLOW}3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Kubernetes...${NC}"
if [[ -f "config/k8s/apiservice.yaml" ]]; then
    echo -e "${GREEN}‚úÖ APIService –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞${NC}"
    echo "–í–µ—Ä—Å–∏—è API –≤ APIService:"
    grep -E "(group|version):" config/k8s/apiservice.yaml | head -3
else
    echo -e "${RED}‚ùå APIService –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

# 4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
echo -e "\n${YELLOW}4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥...${NC}"
mkdir -p apiserver.local.config/certificates

cat > apiserver.local.config/test-config.yaml << EOF
# –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ API —Å–µ—Ä–≤–µ—Ä–∞
backend-address: "localhost:9090"
bind-address: "127.0.0.1"
secure-port: 8443
EOF

echo -e "${GREEN}‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ —Å–æ–∑–¥–∞–Ω: apiserver.local.config/test-config.yaml${NC}"

# 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ (–±–µ–∑ backend)
echo -e "\n${YELLOW}5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–µ—Ä–≤–µ—Ä–∞...${NC}"
echo "–ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏..."

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–µ –∏ —É–±–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
timeout 3s ./bin/k8s-apiserver \
    --backend-address="localhost:9090" \
    --secure-port=8443 \
    --bind-address=127.0.0.1 \
    --v=2 || {
    exit_code=$?
    if [[ $exit_code -eq 124 ]]; then
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ (–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É)${NC}"
    else
        echo -e "${RED}‚ùå –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: $exit_code)${NC}"
        echo "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
        echo "  - Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞)"
        echo "  - –û—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏" 
        echo "  - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
        echo -e "\n${YELLOW}–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–≤–æ–¥ —Å–µ—Ä–≤–µ—Ä–∞:${NC}"
        timeout 2s ./bin/k8s-apiserver \
            --backend-address="localhost:9090" \
            --secure-port=8443 \
            --bind-address=127.0.0.1 \
            --v=4 2>&1 | tail -20 || true
    fi
}

echo -e "\n${BLUE}===========================================${NC}"
echo -e "${GREEN}üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û${NC}"
echo -e "${BLUE}===========================================${NC}"

echo -e "\n${YELLOW}üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:${NC}"
echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å backend —Å–µ—Ä–≤–∏—Å: netguard-backend –Ω–∞ –ø–æ—Ä—Ç—É 9090"
echo "2. –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ Kubernetes: kubectl apply -f config/k8s/"
echo "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å APIService: kubectl get apiservice v1beta1.netguard.sgroups.io"

echo -e "\n${YELLOW}üîç –ü–û–õ–ï–ó–ù–´–ï –ö–û–ú–ê–ù–î–´ –î–õ–Ø –û–¢–õ–ê–î–ö–ò:${NC}"
echo "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: kubectl logs -f deployment/netguard-apiserver -n netguard-test"
echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: kubectl get secret netguard-apiserver-certs -n netguard-test"
echo "‚Ä¢ –¢–µ—Å—Ç API: kubectl get services.netguard.sgroups.io" 