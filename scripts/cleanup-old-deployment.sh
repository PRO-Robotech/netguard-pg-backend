#!/bin/bash

# Script to cleanup old netguard deployment from default namespace
# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è netguard –∏–∑ default namespace

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Netguard –∏–∑ default namespace"
echo "=============================================================="
echo ""

# Check current state
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
echo "–¢–µ–∫—É—â–∏–µ netguard —Ä–µ—Å—É—Ä—Å—ã –≤ default:"
kubectl get all -n default | grep netguard || echo "  –ù–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤"

echo -e "\n–¢–µ–∫—É—â–∏–µ netguard secrets –≤ default:"
kubectl get secret -n default | grep netguard || echo "  –ù–µ—Ç —Å–µ–∫—Ä–µ—Ç–æ–≤"

echo -e "\n–¢–µ–∫—É—â–∏–µ netguard configmaps –≤ default:"
kubectl get configmap -n default | grep netguard || echo "  –ù–µ—Ç configmaps"

echo ""
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    log_info "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    exit 0
fi

echo ""
log_info "–ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É..."

# Remove deployments
log_info "–£–¥–∞–ª–µ–Ω–∏–µ deployments..."
kubectl delete deployment netguard-apiserver -n default --ignore-not-found=true
kubectl delete deployment netguard-backend -n default --ignore-not-found=true

# Remove services
log_info "–£–¥–∞–ª–µ–Ω–∏–µ services..."
kubectl delete service netguard-apiserver -n default --ignore-not-found=true
kubectl delete service netguard-backend -n default --ignore-not-found=true

# Remove configmaps
log_info "–£–¥–∞–ª–µ–Ω–∏–µ configmaps..."
kubectl delete configmap netguard-apiserver-config -n default --ignore-not-found=true

# Remove secrets
log_info "–£–¥–∞–ª–µ–Ω–∏–µ secrets..."
kubectl delete secret netguard-apiserver-certs -n default --ignore-not-found=true

# Remove APIService (it will be recreated with new service reference)
log_info "–£–¥–∞–ª–µ–Ω–∏–µ APIService (–±—É–¥–µ—Ç –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω)..."
kubectl delete apiservice v1beta1.netguard.sgroups.io --ignore-not-found=true

# Wait for resources to be deleted
log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è..."
sleep 10

# Check if everything is cleaned up
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—á–∏—Å—Ç–∫–∏..."
REMAINING_RESOURCES=$(kubectl get all -n default | grep netguard || echo "")
if [ -z "$REMAINING_RESOURCES" ]; then
    log_success "‚úÖ –í—Å–µ —Ä–µ—Å—É—Ä—Å—ã netguard —É–¥–∞–ª–µ–Ω—ã –∏–∑ default namespace"
else
    log_warning "‚ö† –û—Å—Ç–∞–ª–∏—Å—å —Ä–µ—Å—É—Ä—Å—ã:"
    echo "$REMAINING_RESOURCES"
fi

REMAINING_SECRETS=$(kubectl get secret -n default | grep netguard || echo "")
if [ -z "$REMAINING_SECRETS" ]; then
    log_success "‚úÖ –í—Å–µ —Å–µ–∫—Ä–µ—Ç—ã netguard —É–¥–∞–ª–µ–Ω—ã –∏–∑ default namespace"
else
    log_warning "‚ö† –û—Å—Ç–∞–ª–∏—Å—å —Å–µ–∫—Ä–µ—Ç—ã:"
    echo "$REMAINING_SECRETS"
fi

REMAINING_CONFIGMAPS=$(kubectl get configmap -n default | grep netguard || echo "")
if [ -z "$REMAINING_CONFIGMAPS" ]; then
    log_success "‚úÖ –í—Å–µ configmaps netguard —É–¥–∞–ª–µ–Ω—ã –∏–∑ default namespace"
else
    log_warning "‚ö† –û—Å—Ç–∞–ª–∏—Å—å configmaps:"
    echo "$REMAINING_CONFIGMAPS"
fi

# Check APIService
APISERVICE_STATUS=$(kubectl get apiservice v1beta1.netguard.sgroups.io 2>/dev/null || echo "NotFound")
if [ "$APISERVICE_STATUS" = "NotFound" ]; then
    log_success "‚úÖ APIService —É–¥–∞–ª–µ–Ω"
else
    log_warning "‚ö† APIService –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:"
    kubectl get apiservice v1beta1.netguard.sgroups.io
fi

echo ""
log_success "üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å namespace'—ã: ./fix-namespaces.sh"
echo "2. –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º namespace: ./deploy-complete.sh"
echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å: ./test-complete.sh" 