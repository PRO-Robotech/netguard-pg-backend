#!/bin/bash

set -e

echo "üöÄ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ WATCH –û–ü–ï–†–ê–¶–ò–ô –í MINIKUBE"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
NAMESPACE="netguard-test"
IMAGE_NAME="netguard/k8s-apiserver:latest"

echo "üì¶ –ó–∞–≥—Ä—É–∂–∞—é –æ–±—Ä–∞–∑ –≤ minikube..."
minikube image load ${IMAGE_NAME}

echo "üîß –ü–µ—Ä–µ—Å–æ–∑–¥–∞—é deployment..."
kubectl delete deployment netguard-apiserver -n ${NAMESPACE} --ignore-not-found=true
kubectl apply -f config/k8s/deployment.yaml

echo "‚è∞ –ñ–¥—É –∫–æ–≥–¥–∞ –ø–æ–¥ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤..."
kubectl wait --for=condition=ready pod -l app=netguard-apiserver -n ${NAMESPACE} --timeout=120s

echo "üìä –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∞..."
kubectl get pods -n ${NAMESPACE} -l app=netguard-apiserver

echo "üîç –¢–ï–°–¢–ò–†–£–Æ WATCH –û–ü–ï–†–ê–¶–ò–ò..."

# –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã–π Service
echo "1Ô∏è‚É£ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã–π Service..."
kubectl apply -f - <<EOF
apiVersion: netguard.sgroups.io/v1beta1
kind: Service
metadata:
  name: test-service-watch
  namespace: ${NAMESPACE}
spec:
  serviceName: "test-app"
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
EOF

# –í–∫–ª—é—á–∞—é watch –≤ background
echo "2Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞—é watch –æ–ø–µ—Ä–∞—Ü–∏—é..."
timeout 10s kubectl api-resources --api-group=netguard.sgroups.io --verbs=watch -o wide || true

echo "3Ô∏è‚É£ –û–±–Ω–æ–≤–ª—è—é Service –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ watch —Å–æ–±—ã—Ç–∏—è..."
kubectl patch service test-service-watch -n ${NAMESPACE} --type='merge' -p='{"metadata":{"labels":{"test":"updated"}}}'

echo "4Ô∏è‚É£ –£–¥–∞–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–π Service..."
kubectl delete service test-service-watch -n ${NAMESPACE} --ignore-not-found=true

echo "üìã –ü—Ä–æ–≤–µ—Ä—è—é –ª–æ–≥–∏ apiserver –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –æ—à–∏–±–æ–∫ watch..."
kubectl logs -n ${NAMESPACE} -l app=netguard-apiserver --tail=50 | grep -i "watch\|ServiceList\|unable to decode" || echo "‚úÖ –õ–æ–≥–∏ —á–∏—Å—Ç—ã–µ –æ—Ç –æ—à–∏–±–æ–∫ watch"

echo "‚úÖ –¢–ï–°–¢ WATCH –û–ü–ï–†–ê–¶–ò–ô –ó–ê–í–ï–†–®–ï–ù" 