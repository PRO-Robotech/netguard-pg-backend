#!/bin/bash
set -e

NAMESPACE="netguard-test"

echo "üöÄ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –°–ë–û–†–ö–ê –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–õ–Ø MINIKUBE"
echo "================================================"

echo ""
echo "üì¶ –®–ê–ì 1: –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞..."

# –°–±–æ—Ä–∫–∞ –õ–û–ö–ê–õ–¨–ù–û (–Ω–µ –≤ Minikube env)
echo "–ö–æ–º–ø–∏–ª—è—Ü–∏—è API Server..."
if make build-k8s-apiserver; then
    echo "‚úì –ö–æ–º–ø–∏–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–∞"
else
    echo "‚ùå –û–®–ò–ë–ö–ê: –ö–æ–º–ø–∏–ª—è—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å"
    exit 1
fi

echo "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –õ–û–ö–ê–õ–¨–ù–û (–ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–±)..."
if docker build -f config/docker/Dockerfile.k8s-apiserver-simple -t netguard/k8s-apiserver:latest .; then
    echo "‚úì –õ–æ–∫–∞–ª—å–Ω—ã–π Docker –æ–±—Ä–∞–∑ —Å–æ–∑–¥–∞–Ω"
else
    echo "‚ùå –û–®–ò–ë–ö–ê: –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
    exit 1
fi

echo ""
echo "üì§ –®–ê–ì 2: –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ Minikube..."

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ –≤ Minikube registry
echo "–ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—Ä–∞–∑ –≤ Minikube..."
if minikube image load netguard/k8s-apiserver:latest; then
    echo "‚úì –û–±—Ä–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Minikube"
else
    echo "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—Ä–∞–∑ –≤ Minikube"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±—Ä–∞–∑ –≤ Minikube
echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–∑ –≤ Minikube registry..."
minikube ssh "docker images | grep netguard/k8s-apiserver" | head -2

echo ""
echo "üîÑ –®–ê–ì 3: –†–µ–¥–µ–ø–ª–æ–π –≤ Minikube..."

echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ deployment..."
kubectl rollout restart deployment/netguard-apiserver -n "$NAMESPACE"

echo "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ deployment..."
if kubectl rollout status deployment/netguard-apiserver -n "$NAMESPACE" --timeout=120s; then
    echo "‚úì Deployment –≥–æ—Ç–æ–≤"
else
    echo "‚ùå –û–®–ò–ë–ö–ê: Deployment –Ω–µ –≥–æ—Ç–æ–≤"
    exit 1
fi

echo "–°—Ç–∞—Ç—É—Å pods:"
kubectl get pods -n "$NAMESPACE" -l app=netguard-apiserver

echo ""
echo "üîç –®–ê–ì 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ APIService..."
kubectl get apiservice v1beta1.netguard.sgroups.io

echo ""
echo "‚ö° –®–ê–ì 5: –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ WATCH..."

echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ watch –æ–ø–µ—Ä–∞—Ü–∏–π (10 —Å–µ–∫)..."

# –ó–∞–ø—É—Å–∫–∞–µ–º watch –≤ —Ñ–æ–Ω–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏
(kubectl get services.v1beta1.netguard.sgroups.io -n "$NAMESPACE" --watch --request-timeout=10s 2>&1 || true) | \
  tee /tmp/watch_test_result

echo ""
echo "=== –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–ê ==="

if grep -q "unable to decode an event from the watch stream" /tmp/watch_test_result; then
    echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: Watch –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ –µ—â–µ —Å–ª–æ–º–∞–Ω—ã!"
    echo "–ù–∞–π–¥–µ–Ω–∞ –æ—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è:"
    grep "unable to decode" /tmp/watch_test_result
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ API Server:"
    kubectl logs deployment/netguard-apiserver -n "$NAMESPACE" --tail=10
    rm -f /tmp/watch_test_result
    exit 1
elif grep -q "no kind.*ServiceList.*registered" /tmp/watch_test_result; then
    echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ServiceList –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!"
    grep "ServiceList" /tmp/watch_test_result
    rm -f /tmp/watch_test_result
    exit 1
else
    echo "‚úÖ –£–°–ü–ï–•: Watch –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!"
    echo "–ù–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è"
fi

rm -f /tmp/watch_test_result

echo ""
echo "üß™ –®–ê–ì 6: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç..."

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ Service
echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ Service..."
if kubectl apply -f - <<EOF
apiVersion: netguard.sgroups.io/v1beta1
kind: Service
metadata:
  name: minikube-test-service
  namespace: $NAMESPACE
spec:
  description: "Minikube test service"
  ingressPorts:
  - protocol: TCP
    port: "80"
EOF
then
    echo "‚úì Service —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–µ–Ω–∏—è
    if kubectl get services.v1beta1.netguard.sgroups.io minikube-test-service -n "$NAMESPACE" &>/dev/null; then
        echo "‚úì Service —á–∏—Ç–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ"
        
        # –£–¥–∞–ª–µ–Ω–∏–µ
        if kubectl delete services.v1beta1.netguard.sgroups.io minikube-test-service -n "$NAMESPACE" &>/dev/null; then
            echo "‚úì Service —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        else
            echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º Service"
        fi
    else
        echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —á—Ç–µ–Ω–∏–µ–º Service"
    fi
else
    echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º Service"
fi

echo ""
echo "üéâ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:"
echo "========================="
echo "‚úÖ –û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω –ª–æ–∫–∞–ª—å–Ω–æ –∏ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Minikube"
echo "‚úÖ Deployment —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
echo "‚úÖ APIService –¥–æ—Å—Ç—É–ø–µ–Ω"

if ! grep -q "unable to decode\|ServiceList.*registered" /tmp/watch_test_result 2>/dev/null; then
    echo "‚úÖ Watch –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ –æ—à–∏–±–æ–∫ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è"
    echo ""
    echo "üéØ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï WATCH –û–ü–ï–†–ê–¶–ò–ô –†–ê–ë–û–¢–ê–ï–¢!"
    echo ""
    echo "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å –≤ –ø–ª–∞–Ω–µ:"
    echo "- [‚úÖ] 1.1 –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å watch"  
    echo "- [‚úÖ] 1.2 –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PollerWatchInterface"
else
    echo "‚ùå Watch –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ –µ—â–µ –∏–º–µ—é—Ç –ø—Ä–æ–±–ª–µ–º—ã"
    echo "–ù—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"
fi 